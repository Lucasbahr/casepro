version: '3'

services:
  web:
    build: .
    command: sh -c "/usr/local/bin/script.sh && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - SITE_API_HOST=http://0.0.0.0:8001/
      - SITE_BACKEND=casepro.backend.rapidpro.RapidProBackend
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DEBUG=${DEBUG}
    networks:
      - mynetwork

  celery:
    build: .
    command: celery -A casepro worker -Q celery -B -n casepro.celery --loglevel=INFO
    environment:
      - SITE_API_HOST=http://0.0.0.0:8001/
      - SITE_BACKEND=casepro.backend.rapidpro.RapidProBackend
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DEBUG=${DEBUG}
    depends_on:
      - db
      - redis
      - web
    networks:
      - mynetwork

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis:
    image: redis:alpine
    volumes:
      - .:/usr/src/app
    ports:
      - "6379:6379"
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  db_data:
